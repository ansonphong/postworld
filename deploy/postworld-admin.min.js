postworldAdmin.directive("pwAdminBackgrounds",[function(){return{controller:"pwAdminBackgroundsCtrl",link:function(scope,element){element.addClass("pw-admin-backgrounds")}}}]),postworldAdmin.controller("pwAdminBackgroundsCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions","pwOptionsData",function($scope,$log,$window,$parse,$pwData,$_,$pwPostOptions,$pwOptionsData){$scope.view="settings",$scope.newBackground=function(){var newBackground={name:"My Background",id:"background_"+$_.makeHash(8),description:"",primary:{image:{id:null,size:"full",parallax:-.66},style:{"background-size":null,"background-position":"center top","background-repeat":null,"background-color":null,"background-attachment":null,"background-color":null}},secondary:{image:{id:null,size:"full",parallax:-.33},style:{"background-size":100,"background-position":"center top","background-repeat":"repeat","background-attachment":null,opacity:50}}};$scope.pwBackgrounds.push(newBackground),$scope.selectItem(newBackground)},$scope.removeBackground=function(background){var updatedBackgrounds=[];angular.forEach($scope.pwBackgrounds,function(value){background!=value&&updatedBackgrounds.push(value)}),$scope.pwBackgrounds=updatedBackgrounds},$scope.optionsMeta=$pwOptionsData.options}]),postworldAdmin.directive("pwAdminDatabase",[function(){return{controller:"pwAdminDatabaseCtrl",link:function($scope,element){element.addClass("pw-admin-database")}}}]),postworldAdmin.controller("pwAdminDatabaseCtrl",["$scope","$log","$window","pwData","_","$timeout",function($scope,$log,$window,$pwData,$_,$timeout){$scope.busy={},$scope.isBusy=function(key){return $_.get($scope.busy,key)},$scope.setBusy=function(key,bool){$scope.busy[key]=bool},$scope.getPercent=function(current,total){var d=current/total,p=100*d;return parseInt(p)},$scope.getPercentWidth=function(current,total){var p=$scope.getPercent(current,total);return{width:p+"%"}},$scope.$watch("progress",function(){angular.forEach($scope.xCacheTypes,function(xCacheType){var active=$_.get($scope.progress,xCacheType.functionName+".active");active?($scope.setBusy(xCacheType.functionName,!0),$scope.progressLoop(xCacheType.functionName)):$scope.setBusy(xCacheType.functionName,!1)})},1),$scope.updateBusy={},$scope.updateProgress=function(functionName){return 1==$_.get($scope.updateBusy,functionName)?!1:1==$_.get($scope.endingProgress,functionName)?!1:($scope.updateBusy[functionName]=!0,$pwData.getProgress(functionName).then(function(response){var data=response.data;$scope.updateBusy[functionName]=!1,0==$_.get($scope.endingProgress,functionName)&&(0==data&&(data={active:!0}),$scope.progress[functionName]=data)},function(){}),void 0)},$scope.progressLoop=function(functionName){return $scope.isBusy(functionName)?($scope.updateProgress(functionName),$timeout(function(){$scope.progressLoop(functionName)},2e3),void 0):!1},$timeout(function(){},0),$scope.endingProgress={},$scope.endProgress=function(functionName){return 1==$_.get($scope.endingProgress,functionName)?!1:($scope.endingProgress[functionName]=!0,$pwData.endProgress(functionName).then(function(response){$scope.endingProgress[functionName]=!1,$scope.updateBusy[functionName]=!1,$scope.progress[functionName]=response.data},function(){}),void 0)},$scope.rankScoreReadout={},$scope.xCacheTypes=[{title:"Rank Score",icon:"pwi-bars",label:"Update Post Rank Scores Cache",functionName:"pw_cache_all_rank_scores"},{title:"Post Points",icon:"pwi-pushpin",label:"Repair Post Points Cache",functionName:"pw_cache_all_post_points"},{title:"User Points",icon:"pwi-user",label:"Repair User Points Cache",functionName:"pw_cache_all_user_points"},{title:"Comment Points",icon:"pwi-bubbles-2",label:"Repair Comment Points Cache",functionName:"pw_cache_all_comment_points"}],$scope.initProgressFunction=function(functionName){$scope.setBusy(functionName,!0),$scope.progressLoop(functionName),$pwData.wpAjax(functionName,{}).then(function(){$scope.setBusy(functionName,!1)},function(){})},$scope.cleanupMetaReadout={},$scope.cleanupTables=[{name:"Postmeta",type:"postmeta"},{name:"Postworld Postmeta",type:"postworld_postmeta"},{name:"Usermeta",type:"usermeta"},{name:"Term Counts",type:"term_counts"}],$scope.cleanupMeta=function(type){var busyKey="cleanup_"+type;$scope.setBusy(busyKey,!0),$pwData.wpAjax("pw_cleanup_meta",{type:type}).then(function(response){$scope.setBusy(busyKey,!1),$log.debug("cleanupMeta : RESPONSE : ",response),$scope.cleanupMetaReadout[type]=response.data},function(){})},$scope.taxOpReadout={},$scope.taxOps=[{title:"Update Taxonomy Term Post Counts",description:"Update the post counts for all registered taxonomy's terms.",type:"update_term_count"},{title:"Delete Empty Terms",description:"Delete all terms with a post count of 0. Update term post counts before running this.",type:"delete_empty_terms"},{title:"Cleanup Term Taxonomy Table",description:"Delete all terms' rows from the wp_term_taxonomy table which have no existant coorolations in the wp_terms table.",type:"cleanup_term_taxonomy_table"},{title:"Cleanup Orphaned Term Relationships",description:"Deletes all term relationships from term_relationship tables whose term_taxonomy_id no longer exists, or where the post no longer exists.",type:"cleanup_term_relationships_table"},{title:"Migrate WP 4.4 Taxonomy Metadata",description:"Migrates data from the <i>wp_taxonomymeta</i> table to <i>wp_termmeta</i> which was introduced in WP 4.4.",type:"migrate_taxonomymeta_to_termmeta"}],$scope.doTaxOp=function(type){var busyKey="taxOp_"+type;$scope.setBusy(busyKey,!0),$pwData.wpAjax("pw_taxonomy_operation",{type:type,vars:{}}).then(function(response){$scope.setBusy(busyKey,!1),$log.debug("doTaxOp : RESPONSE : ",response),$scope.taxOpReadout[type]=response.data},function(){})},$scope.deleteCacheType=function(cacheType){$scope.setBusy("cacheTypeReadout",!0),$pwData.wpAjax("pw_delete_cache_type",{cache_type:cacheType}).then(function(response){$scope.setBusy("cacheTypeReadout",!1),$scope.cacheTypeReadout=response.data},function(){})},$scope.refreshCacheReadout=function(){$scope.setBusy("cacheTypeReadout",!0),$pwData.wpAjax("pw_get_cache_types_readout",{}).then(function(response){$scope.setBusy("cacheTypeReadout",!1),$log.debug("refreshCacheReadout : RESPONSE : ",response),$scope.cacheTypeReadout=response.data},function(){})},$scope.truncateCache=function(){$scope.setBusy("cacheTypeReadout",!0),$pwData.wpAjax("pw_truncate_cache",{}).then(function(response){$scope.setBusy("cacheTypeReadout",!1),$scope.cacheTypeReadout=response.data},function(){})},$scope.cacheTypeReadoutIsEmpty=function(){return _.isEmpty($scope.cacheTypeReadout)}}]),postworldAdmin.directive("pwFeedOptions",["pwData","_","pwPostOptions",function($pwData,$_,$pwPostOptions){return{link:function($scope,element){element.addClass("pw-feed-options"),$scope.feedOptions={view:$pwPostOptions.postView().options.feeds,views:{grid:{columns:[1,2,3,4,5,6]}},query:{post_type:$pwPostOptions.postType(),post_status:$pwPostOptions.postStatus(),orderby:$pwPostOptions.orderBy(),order:$pwPostOptions.order(),event_filter:$pwPostOptions.eventFilter(),post_parent_from:[{value:"top_level",name:"Top Level",description:"Show top level posts, with post_parent : 0."},{value:"this_post_id",name:"This Post (Show Children)",description:"Show children of the current post, derived from : $post->ID global."},{value:"this_post_parent",name:"This Post Parent (Show Siblings)",description:"Show siblings of the current post, derived from : $post->post_parent global."},{value:"post_id",name:"Specific Post",description:"Select a specific post."}],exclude_posts_from:[{value:"this_post_id",name:"This Post",description:"Exclude the current post"}],include_posts_from:[{value:"this_post_id",name:"This Post",description:"Include the current post"},{value:"this_post_parent",name:"This Post Parent",description:"Include the current posts parent"}],author_from:[{value:"this_author",name:"This Author",description:"Include posts by the current post's author."},{value:"author_id",name:"Specific Author",description:"Select a specific author."}]}}}}}]),postworldAdmin.directive("pwAdminFeeds",[function(){return{controller:"pwAdminFeedsCtrl",link:function(scope,element){element.addClass("pw-admin-feeds")}}}]),postworldAdmin.controller("pwAdminFeedsCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions",function($scope,$log,$window,$parse,$pwData,$_,$pwPostOptions){$scope.view="settings",$scope.newFeed=function(){var feedId="feed_"+$_.makeHash(8),newFeed={id:feedId,name:"New Feed",preload:10,load_increment:10,offset:0,order_by:"-post_date",view:{current:$scope.feedOptions.view[0],options:[]},query:{post_type:["post"],post_status:"publish",orderby:"date",order:"DESC",event_filter:null,offset:0,posts_per_page:200},feed_template:"feed-list",aux_template:"seo-list"};$scope.pwFeeds.push(newFeed),$scope.selectItem(newFeed)},$scope.postClassOptions=function(){var post_type=$_.getObj($scope.selectedItem,"query.post_type");return $pwPostOptions.postClass(post_type)},$scope.selectOptionObj=function(optionValue){var options=$_.getObj($scope.feedOptions,optionValue),selected=$_.getObj($scope.selectedItem,optionValue);return options&&selected?_.findWhere(options,{value:selected}):!1},$scope.$watch("selectedItem.query.post_parent_from",function(value){var objExists=$_.objExists($scope.selectedItem,"query.post_parent"),isPostId="post_id"==value;!isPostId&&objExists?delete $scope.selectedItem.query.post_parent:isPostId&&!objExists&&($scope.selectedItem.query.post_parent=0)}),$scope.$watch("selectedItem.query.author_from",function(value){var objExists=$_.objExists($scope.selectedItem,"query.author"),isAuthorId="author_id"==value;!isAuthorId&&objExists?delete $scope.selectedItem.query.author:isAuthorId&&!objExists&&($scope.selectedItem.query.author=0)}),$scope.$watch("selectedItem.query",function(){null==$_.getObj($scope,"selectedItem.query.event_filter")&&delete $scope.selectedItem.query.event_filter,null==$_.getObj($scope,"selectedItem.query.post_class")&&delete $scope.selectedItem.query.post_class,null==$_.getObj($scope,"selectedItem.query.post_parent")&&delete $scope.selectedItem.query.post_parent,null==$_.getObj($scope,"selectedItem.query.exclude_posts_from")&&delete $scope.selectedItem.query.exclude_posts_from,null==$_.getObj($scope,"selectedItem.query.include_posts_from")&&delete $scope.selectedItem.query.include_posts_from},1)}]),postworldAdmin.directive("pwAdminIconsets",[function(){return{controller:"pwAdminIconsetsCtrl",link:function($scope,element){element.addClass("pw-admin-iconsets")}}}]),postworldAdmin.controller("pwAdminIconsetsCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions",function($scope,$log,$window,$parse,$pwData,$_){$scope.select={shortcodeIcon:""},$scope.shortcodeAtts={},$scope.iconsetIsRequired=function(iconsetSlug){return $_.inArray(iconsetSlug,$scope.pwRequiredIconsets)},$scope.getIconShortcode=function(iconClass){if(_.isEmpty(iconClass))return"";var additionalAtts="";return _.isEmpty($scope.shortcodeAtts)||angular.forEach($scope.shortcodeAtts,function(value,key){_.isNull(value)||(additionalAtts+=" "+key+"='"+value+"'")}),"[pw-icon class='"+iconClass+"'"+additionalAtts+"]"}}]),postworldAdmin.directive("pwAdminLayout",[function(){return{controller:"pwAdminLayoutCtrl",link:function(scope,element){element.addClass("pw-admin-layout")}}}]),postworldAdmin.controller("pwAdminLayoutCtrl",["$scope","$log","$window","$parse","_",function($scope,$log,$window,$parse,$_){$scope.status="done",(_.isUndefined($scope.pwLayouts)||!_.isObject($scope.pwLayouts)||_.isEmpty($scope.pwLayouts))&&($scope.pwLayouts={}),angular.forEach($scope.pwLayoutOptions.contexts,function(value){_.isUndefined($scope.pwLayouts[value.name])&&($scope.pwLayouts[value.name]={}),_.isUndefined($scope.pwLayouts[value.name].header)&&($scope.pwLayouts[value.name].header=""),_.isUndefined($scope.pwLayouts[value.name].sidebars)&&($scope.pwLayouts[value.name].sidebars={}),_.isUndefined($scope.pwLayouts[value.name].template)&&($scope.pwLayouts[value.name].template="default","default"==value.name&&($scope.pwLayouts[value.name].template="full-width")),angular.forEach($scope.pwLayoutOptions.widget_areas,function(sidebar_location){_.isUndefined($scope.pwLayouts[value.name].sidebars[sidebar_location.slug])&&($scope.pwLayouts[value.name].sidebars[sidebar_location.slug]={}),_.isUndefined($scope.pwLayouts[value.name].sidebars[sidebar_location.slug].width)&&($scope.pwLayouts[value.name].sidebars[sidebar_location.slug].width={}),angular.forEach($scope.pwLayoutOptions.screen_sizes,function(screen_size){_.isUndefined($scope.pwLayouts[value.name].sidebars[sidebar_location.slug].width[screen_size.slug])&&($scope.pwLayouts[value.name].sidebars[sidebar_location.slug].width[screen_size.slug]=screen_size.default_sidebar_width)})})}),$scope.initLayoutOptions=function(){var layoutOptions=$_.getObj($scope,"pwLayoutOptions.templates.options"),defaultOption=$_.getObj($scope,"pwLayoutOptions.templates.default")[0];layoutOptions?(options=angular.fromJson(angular.toJson(layoutOptions)),_.isObject(defaultOption)&&options.push(defaultOption)):options=[],$scope.layoutOptions=options},$scope.initLayoutOptions(),$scope.selectedLayout=function(contextId){return _.findWhere($scope.layoutOptions,{slug:contextId})},$scope.showModule=function(module,layout,meta){var template=$_.getObj(layout,"template");if(template||(template="default"),_.isUndefined("template")||"default"==template)return!1;switch(module){case"headerFooter":return"default"==template||_.isEmpty(template)?!1:!0;case"sidebars":if($scope.pwSidebars.length>0)return"default"==template||"full-width"==template||""==template?!1:!0;break;case"sidebar-location":if("left"==meta)return-1!=template.indexOf("left")?!0:!1;if("right"==meta)return-1!=template.indexOf("right")?!0:!1}}}]),postworldAdmin.directive("pwAdminOptions",[function(){return{controller:"pwAdminOptionsCtrl",link:function(scope,element){element.addClass("pw-admin-options")}}}]),postworldAdmin.controller("pwAdminOptionsCtrl",["$scope","$window","$parse","$log","pwData","_",function($scope,$window,$parse,$log,$pwData,$_){$scope.refreshOptions=function(){},$scope.test=function(message){alert(message)},$scope.$on("updateOptions",function(scope,vars){$log.debug("UPDATE OPTIONS : ",vars),"object"==typeof vars&&($scope.iOptions=$_.setObj($scope.iOptions,vars.key,vars.value))}),$scope.$on("selectedMedia",function(scope,vars){$log.debug("SELECTED MEDIA : ",vars),"media-id"==vars.format&&($scope.iOptions=$_.setObj($scope.iOptions,vars.key,vars.media));var vars={option_name:"i-options",key:vars.key,value:vars.media};$pwData.set_option_obj(vars).then(function(response){$log.debug("set_option_obj",response)},function(){})})}]),postworldAdmin.directive("pwAdminShortcodes",[function(){return{controller:"pwAdminShortcodesCtrl",link:function(scope,element){element.addClass("pw-admin-shortcodes")}}}]),postworldAdmin.controller("pwAdminShortcodesCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions",function($scope,$log,$window,$parse,$pwData,$_){$scope.view="settings",$scope.newShortcode=function(){var newShortcode={name:"New Shortcode",id:"shortcode-"+$_.randomString(4,["numbers","lowercase"]),type:"self-enclosing",description:"",before_content:"<div>",after_content:"</div>",content:"<div></div>"};$scope.pwShortcodeSnippets.push(newShortcode),$scope.selectItem(newShortcode)},$scope.removeShortcode=function(){var updatedShortcodes=[];angular.forEach($scope.pwShortcodeSnippets,function(value){sidebar!=value&&updatedShortcodes.push(value)}),$scope.pwShortcodeSnippets=updatedShortcodes},$scope.generateShortcode=function(item){return"self-enclosing"==item.type?"["+item.id+"]":"enclosing"==item.type?"["+item.id+"]Content here.[/"+item.id+"]":void 0}}]),postworldAdmin.directive("pwAdminSidebars",[function(){return{controller:"pwAdminSidebarsCtrl",link:function(scope,element){element.addClass("pw-admin-style")}}}]),postworldAdmin.controller("pwAdminSidebarsCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions",function($scope,$log,$window,$parse,$pwData,$_){$scope.newSidebar=function(){var newSidebar={name:"New Sidebar",id:"sidebar-"+$_.randomString(8,["numbers","lowercase"]),description:"Description goes here.","class":"widget",before_widget:'<div class="sidebar-widget">',after_widget:"</div>",before_title:'<h3 class="sidebar-title">',after_title:"</h3>"};$scope.pwSidebars.push(newSidebar),$scope.selectItem(newSidebar)},$scope.removeSidebar=function(sidebar){var updatedSidebars=[];angular.forEach($scope.sidebars,function(value){sidebar!=value&&updatedSidebars.push(value)}),$scope.sidebars=updatedSidebars}}]),postworldAdmin.directive("pwAdminStyle",[function(){return{controller:"pwAdminStyleCtrl",link:function(scope,element){element.addClass("pw-admin-style")}}}]),postworldAdmin.directive("pwAdminStyleInput",function(pwData){return{restrict:"A",scope:{inputObj:"=pwAdminStyleInput",inputModel:"=",options:"=inputOptions"},template:'<div ng-include="itemTemplateUrl"></div>',link:function($scope){var templateUrl=pwData.getTemplate({subdir:"admin",view:"style-input-"+$scope.inputObj.input});$scope.itemTemplateUrl=templateUrl,$scope.backgroundColor=function(color){if(_.isString(color)&&"@"==color.charAt(0)){var searchKey=color.trim();searchKey=color.substring(1);var searchValue="",keepGoing=!0;keepGoing&&angular.forEach($scope.$parent.pwStyles,function(typeValues){keepGoing&&angular.forEach(typeValues,function(sectionValues){keepGoing&&angular.forEach(sectionValues,function(propertyValue,propertyKey){propertyKey==searchKey&&(searchValue=propertyValue,keepGoing=!1)})})}),color=searchValue}var style={background:color};return _.isEmpty(color)&&(style.background="#fff",style.border="1px dashed #ccc"),style}}}}),postworldAdmin.controller("pwAdminStyleCtrl",["$scope","$log","$window","$parse","_","pwOptionsData",function($scope,$log,$window,$parse,$_,$pwOptionsData){$scope.status="done",$scope.options=$pwOptionsData.options,$scope.resetStyleDefaults=function(){$scope.pwStyles=angular.fromJson(angular.toJson($scope.pwStyleDefaults))},$scope.toggleShow=function(key,meta){"undefined"==typeof $scope.showing[key]&&($scope.showing[key]={}),$scope.showing[key][meta]=$scope.showing[key][meta]?!1:!0},$scope.showProperty=function(property,view){switch(view){case"edit":if(!_.isUndefined(property.key))return!0;break;case"space":if("space"==property)return!0;break;case"line":if("line"==property)return!0;break;case"edit-color":if("color"==$_.getObj(property,"input"))return!0}return!1}}]),postworldAdmin.directive("pwAdminTermFeeds",[function(){return{controller:"pwAdminTermFeedsCtrl",link:function(scope,element){element.addClass("pw-admin-term-feeds")}}}]),postworldAdmin.controller("pwAdminTermFeedsCtrl",["$scope","$log","$window","$parse","pwData","_","pwPostOptions",function($scope,$log,$window,$parse,$pwData,$_,$pwPostOptions){$scope.view="settings",$scope.newTermFeed=function(){var feedId="term_feed_"+$_.randomString(8),newTermFeed={template:"term-feed-default",id:feedId,name:"New Feed",preload:10,load_increment:10,offset:0,order_by:"-post_date",query:{post_type:["post"],post_status:"publish",orderby:"date",order:"DESC",event_filter:null,offset:0,posts_per_page:200},feed_template:"feed-list",aux_template:"seo-list"};$scope.pwTermFeeds.push(newTermFeed),$scope.selectItem(newTermFeed)},$scope.postClassOptions=function(){var post_type=$_.getObj($scope.selectedItem,"query.post_type");return $pwPostOptions.postClass(post_type)},$scope.selectOptionObj=function(optionValue){var options=$_.getObj($scope.feedOptions,optionValue),selected=$_.getObj($scope.selectedItem,optionValue);return options&&selected?_.findWhere(options,{value:selected}):!1},$scope.$watch("selectedItem.query.post_parent_from",function(value){var objExists=$_.objExists($scope.selectedItem,"query.post_parent"),isPostId="post_id"==value;!isPostId&&objExists?delete $scope.selectedItem.query.post_parent:isPostId&&!objExists&&($scope.selectedItem.query.post_parent=0)}),$scope.$watch("selectedItem.query",function(){null==$_.getObj($scope,"selectedItem.query.event_filter")&&delete $scope.selectedItem.query.event_filter,null==$_.getObj($scope,"selectedItem.query.post_class")&&delete $scope.selectedItem.query.post_class,null==$_.getObj($scope,"selectedItem.query.post_parent")&&delete $scope.selectedItem.query.post_parent,null==$_.getObj($scope,"selectedItem.query.exclude_posts_from")&&delete $scope.selectedItem.query.exclude_posts_from,null==$_.getObj($scope,"selectedItem.query.include_posts_from")&&delete $scope.selectedItem.query.include_posts_from},1)}]),postworldAdmin.directive("pwSaveOption",["$window","$timeout","$parse","$log","pwData","_",function($window,$timeout,$parse,$log,$pwData,$_){return{restrict:"A",link:function($scope){$scope.saveOption=function(optionName,optionModel,callbacks){_.isUndefined(callbacks)&&(callbacks=[]),$scope.status="saving",optionValue=$_.get($scope,optionModel),valueIsObject=_.isObject(optionValue),valueIsObject&&(optionValue=angular.toJson(optionValue));var vars={option_name:optionName,option_value:optionValue,callbacks:callbacks};$pwData.saveOption(vars).then(function(response){$log.debug("pwData.saveOption : RESPONSE : ",response),$scope.status="done"},function(response){throw{message:"Error: "+JSON.stringify(response)}})}}}}]),postworldAdmin.directive("pwAdmin",[function(){return{restrict:"A",controller:"pwAdminCtrl",link:function(){}}}]),postworldAdmin.controller("pwAdminCtrl",["$scope","$window","$timeout","$log","_",function($scope){$scope.selectedItem={},$scope.showView=function(viewId){return viewId==$scope.view?!0:!1},$scope.duplicateItem=function(item,obj){item=angular.fromJson(angular.toJson(item)),item.name+=" Copy",item.id+="_copy",$scope[obj].push(item),$scope.selectItem(item)},$scope.deleteItem=function(item,obj){$scope[obj]=_.reject($scope[obj],function(thisFeed){return thisFeed.id==item.id}),$scope.selectedItem={},$scope.view=""},$scope.selectItem=function(item){_.isString(item)&&($scope.view=item,$scope.selectedItem={}),_.isObject(item)&&($scope.view="editItem",$scope.selectedItem=item)},$scope.menuClass=function(menuItem){var selected=!1;return _.isString(menuItem)&&$scope.view==menuItem&&(selected=!0),_.isObject(menuItem)&&$scope.selectedItem.id==menuItem.id&&(selected=!0),selected?"selected":void 0},$scope.enableInput=function(selector){element=angular.element(selector),element.removeAttr("disabled")},$scope.focusInput=function(selector){element=angular.element(selector),element.focus()},$scope.disableInput=function(selector){element=angular.element(selector),element.attr("disabled","disabled")}}]),angular.module("ui.slider",[]).value("uiSliderConfig",{}).directive("uiSlider",["uiSliderConfig","$timeout","$log",function(uiSliderConfig,$timeout){return uiSliderConfig=uiSliderConfig||{},{require:"ngModel",compile:function(){return function(scope,elm,attrs,ngModel){function parseNumber(n,decimals){return decimals?parseFloat(n):parseInt(n)}function destroy(){elm.slider("destroy")}var options=angular.extend(scope.$eval(attrs.uiSlider)||{},uiSliderConfig),prevRangeValues={min:null,max:null},properties=["min","max","step"],useDecimals=angular.isUndefined(attrs.useDecimals)?!1:!0,init=function(){angular.isArray(ngModel.$viewValue)&&options.range!==!0&&(console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."),options.range=!0),angular.forEach(properties,function(property){angular.isDefined(attrs[property])&&(options[property]=parseNumber(attrs[property],useDecimals))}),elm.slider(options),init=angular.noop};angular.forEach(properties,function(property){attrs.$observe(property,function(newVal){newVal&&(init(),elm.slider("option",property,parseNumber(newVal,useDecimals)))})}),attrs.$observe("disabled",function(newVal){init(),elm.slider("option","disabled",!!newVal)}),scope.$watch(attrs.uiSlider,function(newVal){init(),void 0!=newVal&&elm.slider("option",newVal)},!0),$timeout(init,0,!0),elm.bind("slide",function(event,ui){ngModel.$setViewValue(ui.values||ui.value),scope.$apply()}),ngModel.$render=function(){init();var method=options.range===!0?"values":"value";!isNaN(ngModel.$viewValue)||ngModel.$viewValue instanceof Array||(ngModel.$viewValue=0),options.range===!0&&(angular.isDefined(options.min)&&options.min>ngModel.$viewValue[0]&&(ngModel.$viewValue[0]=options.min),angular.isDefined(options.max)&&options.max<ngModel.$viewValue[1]&&(ngModel.$viewValue[1]=options.max),ngModel.$viewValue[0]>=ngModel.$viewValue[1]&&(prevRangeValues.min>=ngModel.$viewValue[1]&&(ngModel.$viewValue[0]=prevRangeValues.min),prevRangeValues.max<=ngModel.$viewValue[0]&&(ngModel.$viewValue[1]=prevRangeValues.max)),prevRangeValues.min=ngModel.$viewValue[0],prevRangeValues.max=ngModel.$viewValue[1]),elm.slider(method,ngModel.$viewValue)},scope.$watch(attrs.ngModel,function(){options.range===!0&&ngModel.$render()},!0),$timeout(function(){ngModel.$render()},1),elm.bind("$destroy",destroy)}}}}]);